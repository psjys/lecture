<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 1. bean 등록 => Boy, Girl, MyAspect  -->
	<bean id="boy" class="aop02.Boy" lazy-init="true" />
	<bean id="girl" class="aop02.Girl" lazy-init="true" />
	<bean id="myAsp" class="aop02.MyAspect" lazy-init="true" />

   <!-- 2. AOP 설정 
      1) 공통기능(Aspect) 으로 사용할 bean을 지정
      2) 핵심적 관심사항(pointcut)을 등록  
      ** Joinpoint:클라이언트가 호출하는 모든 비즈니스 메서드
      ** pointcut: Joinpoint 중 실제 적용할 메서드  
               : 핵심 사항 중 횡적 관심사를 적용할 타겟 메서드를 선택하는 지시자,
                   즉 advice를 받을 메서드 <
                   ex. 입력, 수정, 삭제 ... 에서 타겟 메서드를 선택
      3) advice type 지정  : aop02.MyAspect 에 정의된 횡적 관심사항 메서드    
   -->
	<aop:config>
		<aop:aspect ref="myAsp">
			<aop:pointcut expression="execution(void doStudying())" id="myPointcut"/>
			<aop:before method="myBefore" pointcut-ref="myPointcut"/>
			<aop:after-returning method="myAfter_returning" pointcut-ref="myPointcut"/>
			<aop:after-throwing method="myAfter_throwing" pointcut-ref="myPointcut"/>
			<aop:after method="myAfter" pointcut-ref="myPointcut"/>
		</aop:aspect>
	</aop:config>
</beans>
