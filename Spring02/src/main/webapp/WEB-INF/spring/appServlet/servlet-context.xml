<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.ncs.green, service"></context:component-scan>
    <!-- mvc Namespaces 를 추가하면 아래 1), 2) 는 mvc 제공 Tag로 변경해야함 
         1) <annotation-driven />  -->
    <mvc:annotation-driven />

    <!-- 2) <resources mapping="/resources/**" location="/resources/" /> -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <!-- 
    <resources> : location에 대한 요청이 Spring MVC에 영향을 받아 직접 접근이 불가능한 경우
                  이를 WAS에게 위임하여 url로 resourse에 직접 접근 할 수 있도록 해줌.    
            		* : 0 개 이상의 문자와 매칭 
           	 		** : 0 개 이상의 디렉토리와 화일과 매칭 
            	  mapping="/resources/**" : /resources/ 의 하위 경로로 접근하는 모든 경로와 파일은
            	  location="/resources/" : /resources/ 디렉토리에서 찾아라 ~~~ 
    -->   

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
	
       ** Image Upload : MultipartResolver 설정 -->
       
   <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <beans:property name="maxUploadSize" value="-1" />
   </beans:bean>
   <!-- 
      => id , name 변경 불가능 
         : 대부분의 Resolver로 끝나는 클래스의 경우에는 이미 정해져있기 때문에 변경불가능.
      => maxUploadSize 는 지정하지 않으면 default 값은 -1 이며 크기 무제한이 됨. 
         다양하게 변경하며 Test  
         
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -->
	
	<!-- ** Exception Resolver 설정 -->
	<beans:bean id="exceptionResolver"
			class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
			
		<!-- property Tag는 setter 주입을 의미 
          -> setExceptionMappings(..) : 매개변수 Type 이 Collection Properties
          -> setDefaultErrorView(..) : 매개변수 Type 이 String     -->
          
		<beans:property name="exceptionMappings">
			<beans:props>
            <beans:prop key="org.springframework.dao.DuplicateKeyException">
                     errorPage/dupExceptionMessage</beans:prop>      
            <beans:prop key="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator">
                     errorPage/sqlexceptionMessage</beans:prop>
            <beans:prop key="java.lang.IllegalArgumentException">
                     errorPage/ilexceptionMessage</beans:prop>   
            <beans:prop key="java.lang.ArithmeticException">
                     errorPage/arexceptionMessage</beans:prop>
            <beans:prop key="java.lang.NullPointerException">
                     errorPage/npException</beans:prop>               
         </beans:props>
		</beans:property>
		<beans:property name="defaultErrorView" value="errorPage/exception_500" />
	</beans:bean>
	
	<!-- ** 인터셉터 설정 
   		1) 인터셉터 클래스 bean 등록 -->
   		<beans:bean id="loginInterceptor" class="com.ncs.green.LoginInterceptor" />
   
   <!-- 2) url과 인터셉터 설정 
   		   => Namespaces 에서 mvc 확인 ,
     	   => mvc 사용하면 위에 있는 다음 2 Tag 수정 필요함
         <mvc:annotation-driven  ,  <mvc:resources
	-->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- ** 전체 경로 지정 후 예외 경로 지정 --> 
			<mvc:mapping path="/**"/>
			<!-- 예외 경로 -->
			<mvc:exclude-mapping path="/"/>
			<mvc:exclude-mapping path="/home"/>
			<mvc:exclude-mapping path="/mlogin"/>
			<mvc:exclude-mapping path="/mjoin"/>
			
			<!-- 인터셉터로 사용할 빈 등록 -->
			<beans:ref bean="loginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
   		
   		
</beans:beans>

